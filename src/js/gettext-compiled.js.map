{"version":3,"sources":["gettext.js"],"names":[],"mappings":"AAAA,YAAY,CAAA;;;;;;IAEN,OAAO;AACE,aADT,OAAO,CACG,OAAO,EAAE;8BADnB,OAAO;;AAEL,YAAI,OAAO,KAAK,SAAS,EAAE;AACvB,mBAAO,GAAG;AACN,yBAAS,EAAE,EAAE;AACb,wBAAQ,EAAE,IAAI;aACjB,CAAC;SACL;AACD,YAAI,CAAC,OAAO,CAAC,cAAc,CAAC,SAAS,CAAC,EAAE;AACpC,mBAAO,CAAC,OAAO,GAAG,EAAE,CAAC;SACxB;AACD,YAAI,CAAC,OAAO,GAAG,OAAO,CAAC,OAAO,CAAC;AAC/B,YAAI,OAAO,CAAC,MAAM,EAAE;AAChB,gBAAI,CAAC,SAAS,GAAG,UAAC,CAAC,EAAK;AACpB,uBAAO,AAAC,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,GAAI,CAAC,CAAC;aACrC,CAAC;SACL,MAAM;AACH,gBAAI,CAAC,SAAS,GAAG,UAAC,CAAC,EAAK;AACpB,uBAAO,AAAC,CAAC,KAAK,CAAC,GAAI,CAAC,GAAG,CAAC,CAAC;aAC5B,CAAC;SACL;KACJ;;iBArBC,OAAO;;eAuBF,iBAAC,KAAK,EAAE;AACX,gBAAI,KAAK,GAAG,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;AAChC,gBAAI,OAAO,KAAK,AAAC,KAAK,WAAW,EAAE;AAC/B,uBAAO,KAAK,CAAC;aAChB,MAAM;AACH,uBAAO,AAAC,OAAO,KAAK,AAAC,KAAK,QAAQ,GAAI,KAAK,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC;aAC1D;SACJ;;;eAEO,kBAAC,QAAQ,EAAE,MAAM,EAAE,KAAK,EAAE;AAC9B,gBAAI,KAAK,GAAG,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC;AACnC,gBAAI,IAAI,GAAG,OAAO,KAAK,AAAC,CAAC;AACzB,gBAAI,IAAI,KAAK,WAAW,EAAE;AACtB,uBAAO,CAAC,QAAQ,EAAE,MAAM,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC,CAAC;aACpD,MAAM,IAAI,IAAI,KAAK,QAAQ,EAAE;AAC1B,uBAAO,KAAK,CAAC;aAChB,MAAM;AACH,uBAAO,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC,CAAC;aACvC;SACJ;;;WA1CC,OAAO;;;AA6Cb,OAAO,CAAC,IAAI,GAAG,UAAU,WAAW,EAAE,MAAM,EAAE,MAAM,EAAE;AAClD,QAAI,WAAW,CAAC,QAAQ,CAAC,GAAG,CAAC,EAAE;AAC3B,mBAAW,GAAG,WAAW,CAAC,MAAM,CAAC,CAAC,EAAE,WAAW,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;KAC/D;AACD,WAAO,IAAI,OAAO,CAAC,UAAC,OAAO,EAAE,MAAM,EAAK;AACpC,YAAI,GAAG,GAAG,IAAI,cAAc,EAAE,CAAC;AAC/B,WAAG,CAAC,gBAAgB,CAAC,MAAM,EAAE,YAAM;AAC/B,mBAAO,CAAC,IAAI,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;SAClD,CAAC,CAAC;AACH,WAAG,CAAC,gBAAgB,CAAC,OAAO,EAAE,YAAM;AAChC,kBAAM,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC;SAC1B,CAAC,CAAC;AACH,WAAG,CAAC,IAAI,CAAC,KAAK,EAAK,WAAW,SAAI,MAAM,qBAAgB,MAAM,cAAW,CAAC;AAC1E,WAAG,CAAC,IAAI,EAAE,CAAC;KACd,CAAC,CAAC;CACN,CAAC","file":"gettext-compiled.js","sourcesContent":["\"use strict\"\n\nclass Gettext {\n    constructor(catalog) {\n        if (catalog === undefined) {\n            catalog = {\n                'catalog': {},\n                'plural': null\n            };\n        }\n        if (!catalog.hasOwnProperty('catalog')) {\n            catalog.catalog = {};\n        }\n        this.catalog = catalog.catalog;\n        if (catalog.plural) {\n            this.pluralidx = (n) => {\n                return (eval(catalog.plural)) * 1;\n            };\n        } else {\n            this.pluralidx = (n) => {\n                return (n === 1) ? 0 : 1;\n            };\n        }\n    }\n\n    gettext(msgid) {\n        let value = this.catalog[msgid];\n        if (typeof(value) === 'undefined') {\n            return msgid;\n        } else {\n            return (typeof(value) === 'string') ? value : value[0];\n        }\n    }\n\n    ngettext(singular, plural, count) {\n        let value = this.catalog[singular];\n        let type = typeof(value);\n        if (type === 'undefined') {\n            return [singular, plural][this.pluralidx(count)];\n        } else if (type === 'string') {\n            return value;\n        } else {\n            return value[this.pluralidx(count)];\n        }\n    }\n}\n\nGettext.load = function (locale_path, locale, domain) {\n    if (locale_path.endsWith('/')) {\n        locale_path = locale_path.substr(0, locale_path.length - 1);\n    }\n    return new Promise((resolve, reject) => {\n        let xhr = new XMLHttpRequest();\n        xhr.addEventListener('load', () => {\n            resolve(new Gettext(JSON.parse(xhr.response)));\n        });\n        xhr.addEventListener('error', () => {\n            reject(xhr.statusText);\n        });\n        xhr.open('GET', `${locale_path}/${locale}/LC_MESSAGES/${domain}.mo.json`);\n        xhr.send();\n    });\n};\n"]}